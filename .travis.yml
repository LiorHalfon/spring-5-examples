group: edge
dist: trusty

language: java
jdk: oraclejdk8

install: true
before_install:

  # install docker-compose
  - sudo apt update
  - sudo apt install -y python-pip curl jq libxml2-utils
  - sudo pip install docker-compose httpie
  - sudo usermod -aG docker $(whoami)

  # kill whatever punning on postgres / rabbitmq port
  - sudo kill $(sudo lsof -t -i:5432) | true
  - sudo kill $(sudo lsof -t -i:5672) | true

script:
  - export ROOT=$PWD
  - >
    for path in 04-reactive-mongo-webflux \
                03-reactive-webflux-spring-data-redis \
                01-functional-spring; do

      export TARGET="$ROOT/$path";
      cd $TARGET;
      bash gradlew clean build

    done;

after_script:
  - echo "functional-spring"
  - cd $ROOT/01-functional-spring
  - export SPRING_PROFILES_ACTIVE=dev
  - bash gradlew bootRun-service &
  - sleep 10
  - bash gradlew bootRun-client &
  - sleep 10
  - echo "you should be abe to see hi"
  - sleep 5
  - bash gradlew --stop

  - echo "spring-5-integration-example"
  - cd $ROOT/02-spring-integration-5-example
  - bash gradlew clean build
  - sudo mkdir -p /var/app
  - sudo mv -f ./build/libs/*.jar /var/app/boot.jar
  - sudo ln -s /var/app/boot.jar /etc/init.d/boot
  - sudo service boot start
  - sleep 10
  #- curl localhost:8080/sse -H'accept:text/event-stream'
  - curl localhost:8080/sse
  - sleep 1
  - sudo service boot stop

before_cache:
  - bash gradlew --stop
  - rm -rf $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.m2/
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
